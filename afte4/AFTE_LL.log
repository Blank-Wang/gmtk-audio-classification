Ilge:training oldilge$ ./hmm_train_command_splitVanish
*********************************************************
Step 0: Start the training with 1 Gaussian component per mixture
*********************************************************
Generating accumulators. NumComponents: 1, iteration 0
Merging accumulators and updating parameters
LL -8.81578039550497488e+04
*********************************************************
Step 1: Train multiple EM iterations with no splitting or vanishing until you have reached 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 1, iteration 1
Merging accumulators and updating parameters
LL ratio 8.77708e-07
LL -8.81577265782319882e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 2: Do an iteration that splits all Gaussians, and then continue training with no splitting/vanishing until 2% convergence ratio is achieved.
*********************************************************

=================================================
Doubling components 1 to 2

Generating accumulators. NumComponents: 2, iteration 0
Merging accumulators and updating parameters
LL -8.81577265782319882e+04
-------------------------------------------------
Generating accumulators. NumComponents: 2, iteration 1
Merging accumulators and updating parameters
LL ratio -0.00753386
LL -8.88218946234552277e+04
---Trained to 0.02 % convergence.

=================================================
Doubling components 2 to 4

Generating accumulators. NumComponents: 4, iteration 0
Merging accumulators and updating parameters
LL -8.51889519772056810e+04
-------------------------------------------------
Generating accumulators. NumComponents: 4, iteration 1
Merging accumulators and updating parameters
LL ratio 0.0505594
LL -8.08818495924559684e+04
-------------------------------------------------
Generating accumulators. NumComponents: 4, iteration 2
Merging accumulators and updating parameters
LL ratio 0.0180597
LL -7.94211481456813344e+04
---Trained to 0.02 % convergence.

=================================================
Doubling components 4 to 8

Generating accumulators. NumComponents: 8, iteration 0
Merging accumulators and updating parameters
LL -7.62097770757120306e+04
-------------------------------------------------
Generating accumulators. NumComponents: 8, iteration 1
Merging accumulators and updating parameters
LL ratio 0.0286925
LL -7.40231313201580342e+04
-------------------------------------------------
Generating accumulators. NumComponents: 8, iteration 2
Merging accumulators and updating parameters
LL ratio 0.0631075
LL -6.93517154224789265e+04
-------------------------------------------------
Generating accumulators. NumComponents: 8, iteration 3
Merging accumulators and updating parameters
LL ratio 0.0146837
LL -6.83333760386331123e+04
---Trained to 0.02 % convergence.

=================================================
Doubling components 8 to 16

Generating accumulators. NumComponents: 16, iteration 0
Merging accumulators and updating parameters
LL -6.82433453294713981e+04
-------------------------------------------------
Generating accumulators. NumComponents: 16, iteration 1
Merging accumulators and updating parameters
LL ratio -0.00787908
LL -6.87810398645460518e+04
---Trained to 0.02 % convergence.

=================================================
Doubling components 16 to 32

Generating accumulators. NumComponents: 32, iteration 0
Merging accumulators and updating parameters
LL -6.75263991748234694e+04
-------------------------------------------------
Generating accumulators. NumComponents: 32, iteration 1
Merging accumulators and updating parameters
LL ratio 0.0168773
LL -6.63867330027406861e+04
---Trained to 0.02 % convergence.

=================================================
Doubling components 32 to 64

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
LL -6.40356589540507703e+04
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
LL ratio 0.0111716
LL -6.33202779558730472e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 0

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 0

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.0130883
LL -6.40492231683487043e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 1

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 1

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00572839
LL -6.40929943328931986e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 2

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 2

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.0053332
LL -6.40852455378164450e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 3

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 3

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00777797
LL -6.40838113009673398e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 4

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 4

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.0077949
LL -6.40801950447518684e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 5

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 5

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00779309
LL -6.40761111066429803e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 6

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 6

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00778078
LL -6.40735144296195649e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 7

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 7

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00777418
LL -6.40726520794722892e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 8

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 8

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00777218
LL -6.40724385068789707e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 5: Set mcvr = 10, mcsr = 1 for 1 EM iteration.
*********************************************************

=================================================
Moderate vanishing and aggressive splitting: MCVR 10 MCSR 1 round 9

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
*********************************************************
Step 6: Set mcvr = 10, mcsr = 1e10 for 1 iteration (just to kill off some of the weak Gaussians from step 5)
*********************************************************
-------------------------------------------------
Moderate vanishing and no splitting: MCVR 10 MCSR 1e10 round 9

Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 7: Continue training with splitting/vanishing until 2% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 0.00777169
LL -6.40723920759372704e+04
---Trained to 0.02 % convergence.
*********************************************************
Step 8: Set mcvr = 10, mcsr = 5 for 2 iterations.
*********************************************************

=================================================
Moderate vanishing/splitting: MCVR 10 MCSR 5

Generating accumulators. NumComponents: 64, iteration 0
Merging accumulators and updating parameters
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 1
Merging accumulators and updating parameters
*********************************************************
Step 9: Train with no splitting/vanishing until 0.02% convergence.
*********************************************************
-------------------------------------------------
Generating accumulators. NumComponents: 64, iteration 2
Merging accumulators and updating parameters
LL ratio 3.29037e-08
LL -6.40723824243208219e+04
---Trained to 0.002 % convergence.
Ilge:training oldilge$ 
